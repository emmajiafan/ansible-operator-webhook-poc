---
- name: Create self-signed certificate
  k8s:
    definition:
      apiVersion: certmanager.k8s.io/v1alpha1
      kind: Certificate
      metadata:
        name: webhook-testing
        namespace: '{{ namespace }}'
      spec:
        secretName: webhook-testing-cert
        commonName: "webhook-testing-root-ca"
        dnsNames:
        - webhooks.{{ namespace }}.svc
        isCA: true
        issuerRef:
          name: selfsigning-issuer
          kind: ClusterIssuer

- name: Create webhooks and services
  k8s:
    definition: '{{ item }}'
  with_items:
  - apiVersion: admissionregistration.k8s.io/v1
    kind: MutatingWebhookConfiguration
    metadata:
      name: mutating-test.fabianism.us
      annotations:
        certmanager.k8s.io/inject-ca-from: '{{ namespace }}/webhook-testing'
    webhooks:
    - name: "mutating-test.fabianism.us"
      rules:
      - apiGroups:   ["test.fabianism.us"]
        apiVersions: ["*"]
        operations:  ["CREATE"]
        resources:   ["validatingtests"]
        scope:       "Namespaced"
      clientConfig:
        service:
          namespace: "{{ namespace }}"
          name: webhooks
          path: /mutating
      admissionReviewVersions: ["v1"]
      timeoutSeconds: 5
      sideEffects: None

  - apiVersion: admissionregistration.k8s.io/v1
    kind: ValidatingWebhookConfiguration
    metadata:
      name: validating-test.fabianism.us
      annotations:
        certmanager.k8s.io/inject-ca-from: '{{ namespace }}/webhook-testing'
    webhooks:
    - name: validating-test.fabianism.us
      rules:
      - apiGroups:   ["test.fabianism.us"]
        apiVersions: ["*"]
        operations:  ["CREATE"]
        resources:   ["validatingtests"]
        scope:       "Namespaced"
      clientConfig:
        service:
          namespace: "{{ namespace }}"
          name: webhooks
          path: /validating
      failurePolicy: Fail
      sideEffects: None
      admissionReviewVersions: ["v1"]

  - apiVersion: v1
    kind: Service
    metadata:
      name: webhooks
      namespace: '{{ namespace }}'
    spec:
      ports:
      - name: webhook
        port: 443
        protocol: TCP
        targetPort: 5000
      selector:
        name: validating-operator
      type: ClusterIP

